{"version":3,"sources":["js/SceneMain.js"],"names":["Scene","SceneMain","key","Phaser","load","spritesheet","frameWidth","frameHeight","image","audio","anims","create","frames","generateFrameNumbers","frameRate","repeat","sfx","explosions","sound","add","laser","backgrounds","i","bg","ScrollingBackground","push","player","Player","game","config","width","height","console","log","keyW","input","keyboard","addKey","Input","Keyboard","KeyCodes","W","keyS","S","keyA","A","keyD","D","keySpace","SPACE","enemies","group","enemyLasers","playerLasers","time","addEvent","delay","callback","enemy","Math","Between","GunShip","getEnemiesByType","length","ChaserShip","CarrierShip","setScale","callbackScope","loop","physics","collider","playerLaser","undefined","onDestroy","explode","destroy","overlap","getData","type","arr","getChildren","update","isDown","moveUp","moveDown","moveLeft","moveRight","setData","x","displayWidth","y","displayHeight"],"mappings":"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","file":"SceneMain.js","sourceRoot":"..","sourcesContent":["class SceneMain extends Phaser.Scene {\n  constructor() {\n    super({ key: 'SceneMain' });\n  }\n\n  preload() {\n    this.load.spritesheet('sprExplosion', 'content/sprExplosion.png', {\n      frameWidth: 32,\n      frameHeight: 32\n    });\n    this.load.spritesheet('sprEnemy0', 'content/sprEnemy0.png', {\n      frameWidth: 16,\n      frameHeight: 16\n    });\n    this.load.image('sprEnemy1', 'content/sprEnemy1.png');\n    this.load.spritesheet('sprEnemy2', 'content/sprEnemy2.png', {\n      frameWidth: 16,\n      frameHeight: 16\n    });\n    this.load.image('sprLaserEnemy0', 'content/sprLaserEnemy0.png');\n    this.load.image('sprLaserPlayer', 'content/sprLaserPlayer.png');\n    this.load.spritesheet('sprPlayer', 'content/sprPlayer.png', {\n      frameWidth: 16,\n      frameHeight: 16\n    });\n\n    this.load.audio('sndExplode0', 'content/sndExplode0.wav');\n    this.load.audio('sndExplode1', 'content/sndExplode1.wav');\n    this.load.audio('sndLaser', 'content/sndLaser.wav');\n  }\n\n  create() {\n    this.anims.create({\n      key: 'sprEnemy0',\n      frames: this.anims.generateFrameNumbers('sprEnemy0'),\n      frameRate: 20,\n      repeat: -1\n    });\n    this.anims.create({\n      key: 'sprEnemy2',\n      frames: this.anims.generateFrameNumbers('sprEnemy2'),\n      frameRate: 20,\n      repeat: -1\n    });\n    this.anims.create({\n      key: 'sprExplosion',\n      frames: this.anims.generateFrameNumbers('sprExplosion'),\n      frameRate: 20,\n      repeat: 0\n    });\n    this.anims.create({\n      key: 'sprPlayer',\n      frames: this.anims.generateFrameNumbers('sprPlayer'),\n      frameRate: 20,\n      repeat: -1\n    });\n\n    this.sfx = {\n      explosions: [\n        this.sound.add('sndExplode0'),\n        this.sound.add('sndExplode1')\n      ],\n      laser: this.sound.add('sndLaser')\n    };\n\n    this.backgrounds = [];\n    for (var i = 0; i < 5; i++) {\n      var bg = new ScrollingBackground(this, 'sprBg0', i * 10);\n      this.backgrounds.push(bg);\n    }\n\n    this.player = new Player(\n      this,\n      this.game.config.width * 0.5,\n      this.game.config.height * 0.5,\n      'sprPlayer'\n    );\n    console.log(this.player);\n\n    this.keyW = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.W);\n    this.keyS = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.S);\n    this.keyA = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.A);\n    this.keyD = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.D);\n    this.keySpace = this.input.keyboard.addKey(\n      Phaser.Input.Keyboard.KeyCodes.SPACE\n    );\n\n    this.enemies = this.add.group();\n    this.enemyLasers = this.add.group();\n    this.playerLasers = this.add.group();\n\n    this.time.addEvent({\n      delay: 1000,\n      callback: function() {\n        var enemy = null;\n\n        if (Phaser.Math.Between(0, 10) >= 3) {\n          enemy = new GunShip(\n            this,\n            Phaser.Math.Between(0, this.game.config.width),\n            0\n          );\n        } else if (Phaser.Math.Between(0, 10) >= 5) {\n          if (this.getEnemiesByType('ChaserShip').length < 5) {\n            enemy = new ChaserShip(\n              this,\n              Phaser.Math.Between(0, this.game.config.width),\n              0\n            );\n          }\n        } else {\n          enemy = new CarrierShip(\n            this,\n            Phaser.Math.Between(0, this.game.config.width),\n            0\n          );\n        }\n\n        if (enemy !== null) {\n          enemy.setScale(Phaser.Math.Between(10, 20) * 0.1);\n          this.enemies.add(enemy);\n        }\n      },\n      callbackScope: this,\n      loop: true\n    });\n\n    this.physics.add.collider(this.playerLasers, this.enemies, function(\n      playerLaser,\n      enemy\n    ) {\n      if (enemy) {\n        if (enemy.onDestroy !== undefined) {\n          enemy.onDestroy();\n        }\n        enemy.explode(true);\n        playerLaser.destroy();\n      }\n    });\n\n    this.physics.add.overlap(this.player, this.enemies, function(\n      player,\n      enemy\n    ) {\n      if (!player.getData('isDead') && !enemy.getData('isDead')) {\n        player.explode(false);\n        player.onDestroy();\n        enemy.explode(true);\n      }\n    });\n\n    this.physics.add.overlap(this.player, this.enemyLasers, function(\n      player,\n      laser\n    ) {\n      if (!player.getData('isDead') && !laser.getData('isDead')) {\n        player.explode(false);\n        player.onDestroy();\n        laser.destroy();\n      }\n    });\n  }\n\n  getEnemiesByType(type) {\n    var arr = [];\n    for (var i = 0; i < this.enemies.getChildren().length; i++) {\n      var enemy = this.enemies.getChildren()[i];\n      if (enemy.getData('type') == type) {\n        arr.push(enemy);\n      }\n    }\n    return arr;\n  }\n\n  update() {\n    if (!this.player.getData('isDead')) {\n      this.player.update();\n      if (this.keyW.isDown) {\n        this.player.moveUp();\n      } else if (this.keyS.isDown) {\n        this.player.moveDown();\n      }\n      if (this.keyA.isDown) {\n        this.player.moveLeft();\n      } else if (this.keyD.isDown) {\n        this.player.moveRight();\n      }\n\n      if (this.keySpace.isDown) {\n        this.player.setData('isShooting', true);\n      } else {\n        this.player.setData(\n          'timerShootTick',\n          this.player.getData('timerShootDelay') - 1\n        );\n        this.player.setData('isShooting', false);\n      }\n    }\n\n    for (var i = 0; i < this.enemies.getChildren().length; i++) {\n      var enemy = this.enemies.getChildren()[i];\n\n      enemy.update();\n\n      if (\n        enemy.x < -enemy.displayWidth ||\n        enemy.x > this.game.config.width + enemy.displayWidth ||\n        enemy.y < -enemy.displayHeight * 4 ||\n        enemy.y > this.game.config.height + enemy.displayHeight\n      ) {\n        if (enemy) {\n          if (enemy.onDestroy !== undefined) {\n            enemy.onDestroy();\n          }\n          enemy.destroy();\n        }\n      }\n    }\n\n    for (var i = 0; i < this.enemyLasers.getChildren().length; i++) {\n      var laser = this.enemyLasers.getChildren()[i];\n      laser.update();\n      if (\n        laser.x < -laser.displayWidth ||\n        laser.x > this.game.config.width + laser.displayWidth ||\n        laser.y < -laser.displayHeight * 4 ||\n        laser.y > this.game.config.height + laser.displayHeight\n      ) {\n        if (laser) {\n          laser.destroy();\n        }\n      }\n    }\n\n    for (var i = 0; i < this.playerLasers.getChildren().length; i++) {\n      var laser = this.playerLasers.getChildren()[i];\n      laser.update();\n      if (\n        laser.x < -laser.displayWidth ||\n        laser.x > this.game.config.width + laser.displayWidth ||\n        laser.y < -laser.displayHeight * 4 ||\n        laser.y > this.game.config.height + laser.displayHeight\n      ) {\n        if (laser) {\n          laser.destroy();\n        }\n      }\n    }\n\n    for (var i = 0; i < this.backgrounds.length; i++) {\n      this.backgrounds[i].update();\n    }\n  }\n}\n"]}